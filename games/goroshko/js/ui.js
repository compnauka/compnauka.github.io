/**
 * –ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –º–æ–¥–∞–ª—å–Ω—ñ –≤—ñ–∫–Ω–∞, –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ UI-–µ–ª–µ–º–µ–Ω—Ç–∏
 */

/**
 * –ö–ª–∞—Å UIManager
 * –ö–µ—Ä—É—î –≤—Å—ñ–º–∞ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
 */
export class UIManager {
    constructor() {
      this.elements = {};
      this.tutorialShown = false;
    }
  
    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è UI-–º–µ–Ω–µ–¥–∂–µ—Ä–∞
     * @param {Object} elements - –û–±'—î–∫—Ç –∑ DOM-–µ–ª–µ–º–µ–Ω—Ç–∞–º–∏
     */
    init(elements) {
      this.elements = elements;
    }
  
    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ä—ñ–≤–µ–Ω—å
     * @param {Object} data - –î–∞–Ω—ñ {levelNum, desc, damage, armor, health, parGold}
     */
    updateLevelInfo(data) {
      if (this.elements.levelNum) {
        this.elements.levelNum.textContent = data.levelNum;
      }
      if (this.elements.levelDesc) {
        this.elements.levelDesc.textContent = data.desc;
      }
      if (this.elements.damage) {
        this.elements.damage.textContent = data.damage;
      }
      if (this.elements.armor) {
        this.elements.armor.textContent = data.armor;
      }
      if (this.elements.health) {
        this.elements.health.textContent = data.health;
      }
      if (this.elements.parGold) {
        this.elements.parGold.textContent = data.parGold;
      }
    }
  
    /**
     * –ü–æ–∫–∞–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     * @param {string} text - –¢–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     * @param {string} type - –¢–∏–ø ('success', 'error', 'info')
     */
    showMessage(text, type = 'info') {
      if (!this.elements.message) return;
  
      const colors = {
        success: 'bg-green-100 text-green-800 border-2 border-green-300',
        error: 'bg-red-100 text-red-800 border-2 border-red-300',
        info: 'bg-blue-100 text-blue-800 border-2 border-blue-300'
      };
  
      this.elements.message.className = `message text-center p-2.5 rounded-lg mt-3 md:mt-6 text-sm md:text-lg font-bold ${colors[type] || colors.info}`;
      this.elements.message.textContent = text;
      this.elements.message.classList.remove('hidden');
  
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏
      setTimeout(() => this.hideMessage(), 3000);
    }
  
    /**
     * –ü—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     */
    hideMessage() {
      if (this.elements.message) {
        this.elements.message.classList.add('hidden');
      }
    }
  
    /**
     * –ü–æ–∫–∞–∑ —Ç—É—Ç–æ—Ä—ñ–∞–ª—É –ø—Ä–æ —Ü–∏–∫–ª–∏
     */
    showTutorial() {
      if (this.tutorialShown) return;
      
      if (this.elements.tutorialModal && this.elements.tutorialBackdrop) {
        this.elements.tutorialModal.classList.remove('hidden');
        this.elements.tutorialBackdrop.classList.remove('hidden');
        this.tutorialShown = true;
      }
    }
  
    /**
     * –ü—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —Ç—É—Ç–æ—Ä—ñ–∞–ª—É
     */
    hideTutorial() {
      if (this.elements.tutorialModal && this.elements.tutorialBackdrop) {
        this.elements.tutorialModal.classList.add('hidden');
        this.elements.tutorialBackdrop.classList.add('hidden');
      }
    }
  
    /**
     * –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –ø–µ—Ä–µ–º–æ–≥–∏
     * @param {Object} data - –î–∞–Ω—ñ {blocks, medal, parGold, parSilver}
     */
    showVictoryModal(data) {
      if (!this.elements.victoryModal || !this.elements.victoryBackdrop) return;
  
      // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
      if (this.elements.victoryBlockCount) {
        this.elements.victoryBlockCount.textContent = data.blocks;
      }
  
      if (this.elements.victoryMedal) {
        const medals = {
          gold: 'ü•á –ó–æ–ª–æ—Ç–∞ –º–µ–¥–∞–ª—å! –Ü–¥–µ–∞–ª—å–Ω–æ!',
          silver: 'ü•à –°—Ä—ñ–±–Ω–∞ –º–µ–¥–∞–ª—å! –ß—É–¥–æ–≤–æ!',
          bronze: 'ü•â –ë—Ä–æ–Ω–∑–æ–≤–∞ –º–µ–¥–∞–ª—å! –î–æ–±—Ä–µ!'
        };
        this.elements.victoryMedal.textContent = medals[data.medal] || '‚úÖ –†—ñ–≤–µ–Ω—å –ø—Ä–æ–π–¥–µ–Ω–æ!';
      }
  
      // –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
      this.elements.victoryModal.classList.remove('hidden');
      this.elements.victoryBackdrop.classList.remove('hidden');
    }
  
    /**
     * –ü—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –ø–µ—Ä–µ–º–æ–≥–∏
     */
    hideVictoryModal() {
      if (this.elements.victoryModal && this.elements.victoryBackdrop) {
        this.elements.victoryModal.classList.add('hidden');
        this.elements.victoryBackdrop.classList.add('hidden');
      }
    }
  
    /**
     * –£–≤—ñ–º–∫–Ω–µ–Ω–Ω—è/–≤–∏–º–∫–Ω–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –∫–µ—Ä—É–≤–∞–Ω–Ω—è
     * @param {boolean} enabled - –°—Ç–∞–Ω –∫–Ω–æ–ø–æ–∫
     */
    setControlsEnabled(enabled) {
      const buttons = [
        this.elements.btnRun,
        this.elements.btnClear,
        ...document.querySelectorAll('.cmd-btn')
      ].filter(Boolean);
  
      buttons.forEach(btn => {
        btn.disabled = !enabled;
      });
    }
  
    /**
     * –ü–æ–∫–∞–∑ –∫–Ω–æ–ø–æ–∫ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ä—ñ–≤–Ω—è
     * @param {number} level - –ù–æ–º–µ—Ä —Ä—ñ–≤–Ω—è (–ø–æ—á–∏–Ω–∞—é—á–∏ –∑ 0)
     */
    updateButtonsVisibility(level) {
      // –†—ñ–≤–µ–Ω—å 0: —Ç—ñ–ª—å–∫–∏ –ø—Ä–∞–≤–∞ —Å—Ç—Ä—ñ–ª–∫–∞
      // –†—ñ–≤–µ–Ω—å 1+: –≤—Å—ñ —Å—Ç—Ä—ñ–ª–∫–∏
      // –†—ñ–≤–µ–Ω—å 4+: —Ü–∏–∫–ª–∏
  
      const buttons = {
        up: this.elements.btnUp,
        down: this.elements.btnDown,
        left: this.elements.btnLeft,
        right: this.elements.btnRight,
        loop: this.elements.btnLoop,
        endLoop: this.elements.btnRoot
      };
  
      // –°–ø–æ—á–∞—Ç–∫—É —Ö–æ–≤–∞—î–º–æ –≤—Å—ñ
      Object.values(buttons).forEach(btn => {
        if (btn) btn.classList.add('hidden-by-level');
      });
  
      // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ—Ç—Ä—ñ–±–Ω—ñ
      if (level === 0) {
        // –¢—ñ–ª—å–∫–∏ –ø—Ä–∞–≤–∞ —Å—Ç—Ä—ñ–ª–∫–∞
        if (buttons.right) buttons.right.classList.remove('hidden-by-level');
      } else if (level < 4) {
        // –í—Å—ñ —Å—Ç—Ä—ñ–ª–∫–∏
        if (buttons.up) buttons.up.classList.remove('hidden-by-level');
        if (buttons.down) buttons.down.classList.remove('hidden-by-level');
        if (buttons.left) buttons.left.classList.remove('hidden-by-level');
        if (buttons.right) buttons.right.classList.remove('hidden-by-level');
      } else {
        // –í—Å—ñ –∫–Ω–æ–ø–∫–∏ –≤–∫–ª—é—á–Ω–æ –∑ —Ü–∏–∫–ª–∞–º–∏
        Object.values(buttons).forEach(btn => {
          if (btn) btn.classList.remove('hidden-by-level');
        });
      }
    }
  
    /**
     * –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –ø–æ–≤–Ω–æ–µ–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É
     */
    toggleFullscreen() {
      if (!document.fullscreenElement) {
        document.documentElement.requestFullscreen().catch(err => {
          console.warn('Fullscreen request failed:', err);
        });
        if (this.elements.fullscreenIcon) {
          this.elements.fullscreenIcon.classList.remove('fa-expand');
          this.elements.fullscreenIcon.classList.add('fa-compress');
        }
      } else {
        document.exitFullscreen();
        if (this.elements.fullscreenIcon) {
          this.elements.fullscreenIcon.classList.remove('fa-compress');
          this.elements.fullscreenIcon.classList.add('fa-expand');
        }
      }
    }
  
    /**
     * –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –∑–≤—É–∫—É
     * @param {boolean} enabled - –°—Ç–∞–Ω –∑–≤—É–∫—É
     */
    updateSoundIcon(enabled) {
      if (!this.elements.soundIcon || !this.elements.soundToggle) return;
  
      if (enabled) {
        this.elements.soundIcon.classList.remove('fa-volume-mute');
        this.elements.soundIcon.classList.add('fa-volume-up');
        this.elements.soundToggle.setAttribute('aria-pressed', 'true');
      } else {
        this.elements.soundIcon.classList.remove('fa-volume-up');
        this.elements.soundIcon.classList.add('fa-volume-mute');
        this.elements.soundToggle.setAttribute('aria-pressed', 'false');
      }
    }
  
    /**
     * –ê–Ω—ñ–º–∞—Ü—ñ—è –∫–Ω–æ–ø–∫–∏
     * @param {HTMLElement} button - –ï–ª–µ–º–µ–Ω—Ç –∫–Ω–æ–ø–∫–∏
     */
    animateButton(button) {
      if (!button) return;
      
      button.style.transform = 'scale(0.95)';
      setTimeout(() => {
        button.style.transform = 'scale(1)';
      }, 100);
    }
  }
  