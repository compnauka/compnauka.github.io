/**
 * –ú–æ–¥—É–ª—å —Ä—ñ–≤–Ω—ñ–≤ –≥—Ä–∏
 * –ú—ñ—Å—Ç–∏—Ç—å –≤—Å—ñ —Ä—ñ–≤–Ω—ñ —Ç–∞ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –Ω–æ–≤–∏—Ö —Ä—ñ–≤–Ω—ñ–≤
 */

import { GAME_CONFIG, ICONS } from './config.js';

/**
 * –ú–∞—Å–∏–≤ —Ä—ñ–≤–Ω—ñ–≤ –≥—Ä–∏
 * –ö–æ–∂–µ–Ω —Ä—ñ–≤–µ–Ω—å –º—ñ—Å—Ç–∏—Ç—å:
 * - size: —Ä–æ–∑–º—ñ—Ä —Å—ñ—Ç–∫–∏
 * - hero: –ø–æ—á–∞—Ç–∫–æ–≤–∞ –ø–æ–∑–∏—Ü—ñ—è –≥–µ—Ä–æ—è [row, col]
 * - monster: –ø–æ–∑–∏—Ü—ñ—è –º–æ–Ω—Å—Ç—Ä–∞ [row, col]
 * - items: –æ–±'—î–∫—Ç –∑ –º–∞—Å–∏–≤–∞–º–∏ –ø–æ–∑–∏—Ü—ñ–π –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 * - monsterStats: —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –º–æ–Ω—Å—Ç—Ä–∞
 * - obstacles: –º–∞—Å–∏–≤ –ø–æ–∑–∏—Ü—ñ–π –ø–µ—Ä–µ—à–∫–æ–¥
 * - desc: –æ–ø–∏—Å —Ä—ñ–≤–Ω—è
 * - par: —Ü—ñ–ª—å–æ–≤–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±–ª–æ–∫—ñ–≤ –¥–ª—è –º–µ–¥–∞–ª–µ–π {gold, silver}
 */
export const levels = [
  // –†—ñ–≤–µ–Ω—å 1: –û–ø—É–¥–∞–ª–æ (–¢—É—Ç–æ—Ä—ñ–∞–ª - —Ç—ñ–ª—å–∫–∏ –ø—Ä–∞–≤–∞ —Å—Ç—Ä—ñ–ª–∫–∞)
  {
    size: 8,
    hero: [3, 2],
    monster: [3, 5],
    items: { weapons: [], armor: [], potions: [] },
    monsterStats: { 
      health: 10, 
      damage: 0, 
      name: '–û–ø—É–¥–∞–ª–æ', 
      icon: ICONS.monsters.scarecrow 
    },
    obstacles: [
      [0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],
      [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],
      [2,0],[2,1],[2,6],[2,7],
      [3,0],[3,1],[3,6],[3,7],
      [4,0],[4,1],[4,6],[4,7],
      [5,0],[5,1],[5,6],[5,7],
      [6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6],[6,7],
      [7,0],[7,1],[7,2],[7,3],[7,4],[7,5],[7,6],[7,7]
    ],
    desc: "–î—ñ–π–¥–∏ –¥–æ –û–ø—É–¥–∞–ª–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –ª–∏—à–µ –∫–Ω–æ–ø–∫—É '–ü—Ä–∞–≤–æ—Ä—É—á'!",
    par: { gold: 3, silver: 4 }
  },

  // –†—ñ–≤–µ–Ω—å 2: –ì–æ–±–ª—ñ–Ω (–í—Å—ñ –Ω–∞–ø—Ä—è–º–∫–∏)
  {
    size: 8,
    hero: [5, 2],
    monster: [2, 5],
    items: { weapons: [], armor: [], potions: [] },
    monsterStats: { 
      health: 20, 
      damage: 5, 
      name: '–ì–æ–±–ª—ñ–Ω', 
      icon: ICONS.monsters.goblin 
    },
    obstacles: [
      [0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],
      [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],
      [2,0],[2,1],[2,6],[2,7],
      [3,0],[3,1],[3,3],[3,4],[3,6],[3,7],
      [4,0],[4,1],[4,3],[4,4],[4,5],[4,6],[4,7],
      [5,0],[5,1],[5,6],[5,7],
      [6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6],[6,7],
      [7,0],[7,1],[7,2],[7,3],[7,4],[7,5],[7,6],[7,7]
    ],
    desc: '–û–±—ñ–π–¥–∏ –ø–µ—Ä–µ—à–∫–æ–¥–∏, —â–æ–± –¥—ñ—Å—Ç–∞—Ç–∏—Å—è –¥–æ –ì–æ–±–ª—ñ–Ω–∞!',
    par: { gold: 10, silver: 12 }
  },

  // –†—ñ–≤–µ–Ω—å 3: –û—Ä–∫ (–ó–±—Ä–æ—è —Ç–∞ –±—Ä–æ–Ω—è)
  {
    size: 8,
    hero: [5, 2],
    monster: [2, 5],
    items: { 
      weapons: [[4, 3]], 
      armor: [[3, 4]], 
      potions: [] 
    },
    monsterStats: { 
      health: 50, 
      damage: 12, 
      name: '–û—Ä–∫', 
      icon: ICONS.monsters.orc 
    },
    obstacles: [
      [0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],
      [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],
      [2,0],[2,1],[2,6],[2,7],
      [3,0],[3,1],[3,6],[3,7],
      [4,0],[4,1],[4,2],[4,6],[4,7],
      [5,0],[5,1],[5,6],[5,7],
      [6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6],[6,7],
      [7,0],[7,1],[7,2],[7,3],[7,4],[7,5],[7,6],[7,7]
    ],
    desc: '–ó–±–µ—Ä–∏ –∑–±—Ä–æ—é (‚öîÔ∏è) —Ç–∞ –±—Ä–æ–Ω—é (üõ°Ô∏è) –Ω–∞ —à–ª—è—Ö—É –¥–æ –û—Ä–∫–∞!',
    par: { gold: 12, silver: 15 }
  },

  // –†—ñ–≤–µ–Ω—å 4: –¢—Ä–æ–ª—å (–í—Å—ñ –ø—Ä–µ–¥–º–µ—Ç–∏)
  {
    size: 8,
    hero: [5, 2],
    monster: [2, 5],
    items: { 
      weapons: [[4, 2], [2, 4]], 
      armor: [[3, 3]], 
      potions: [[4, 4]] 
    },
    monsterStats: { 
      health: 80, 
      damage: 18, 
      name: '–¢—Ä–æ–ª—å', 
      icon: ICONS.monsters.troll 
    },
    obstacles: [
      [0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],
      [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],
      [2,0],[2,1],[2,6],[2,7],
      [3,0],[3,1],[3,6],[3,7],
      [4,0],[4,1],[4,6],[4,7],
      [5,0],[5,1],[5,6],[5,7],
      [6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6],[6,7],
      [7,0],[7,1],[7,2],[7,3],[7,4],[7,5],[7,6],[7,7]
    ],
    desc: '–ó–±–µ—Ä–∏ –≤—Å–µ —Å–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—è, –≤–∫–ª—é—á–Ω–æ –∑ –∑—ñ–ª–ª—è–º (üß™)!',
    par: { gold: 14, silver: 18 }
  },

  // –†—ñ–≤–µ–Ω—å 5: –°–∫–µ–ª–µ—Ç (–í–≤–µ–¥–µ–Ω–Ω—è —Ü–∏–∫–ª—ñ–≤)
  {
    size: 8,
    hero: [5, 2],
    monster: [2, 5],
    items: { 
      weapons: [[4, 2]], 
      armor: [[3, 2]], 
      potions: [[2, 2]] 
    },
    monsterStats: { 
      health: 50, 
      damage: 10, 
      name: '–°–∫–µ–ª–µ—Ç', 
      icon: ICONS.monsters.skeleton 
    },
    obstacles: [
      [0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],
      [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],
      [2,0],[2,1],[2,6],[2,7],
      [3,0],[3,1],[3,6],[3,7],
      [4,0],[4,1],[4,6],[4,7],
      [5,0],[5,1],[5,6],[5,7],
      [6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6],[6,7],
      [7,0],[7,1],[7,2],[7,3],[7,4],[7,5],[7,6],[7,7]
    ],
    desc: '–ù–æ–≤–∞ –º–µ—Ö–∞–Ω—ñ–∫–∞! –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π –¶–ò–ö–õ–ò, —â–æ–± –ø—Ä–æ–π—Ç–∏!',
    par: { gold: 5, silver: 8 }
  },

  // –†—ñ–≤–µ–Ω—å 6: –î—Ä–∞–∫–æ–Ω (–§—ñ–Ω–∞–ª—å–Ω–∏–π –≤–∏–∫–ª–∏–∫)
  {
    size: 8,
    hero: [7, 0],
    monster: [0, 7],
    items: { 
      weapons: [[6, 1], [5, 2], [4, 3], [3, 4]], 
      armor: [[2, 5]], 
      potions: [[6, 3], [6, 5]] 
    },
    monsterStats: { 
      health: 120, 
      damage: 25, 
      name: '–î—Ä–∞–∫–æ–Ω', 
      icon: ICONS.monsters.dragon 
    },
    obstacles: [[5,1],[5,2],[5,3],[5,4],[3,2],[3,4],[3,5],[1,2],[2,2]],
    desc: '–§—ñ–Ω–∞–ª—å–Ω–∏–π –≤–∏–∫–ª–∏–∫! –û–ø—Ç–∏–º—ñ–∑—É–π —Å–≤—ñ–π —à–ª—è—Ö –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ü–∏–∫–ª—ñ–≤.',
    par: { gold: 10, silver: 15 }
  }
];

/**
 * –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –≤–∏–ø–∞–¥–∫–æ–≤–∏—Ö —Ä—ñ–≤–Ω—ñ–≤
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–µ—Å–∫—ñ–Ω—á–µ–Ω–Ω–∏—Ö —Ä—ñ–≤–Ω—ñ–≤ –ø—ñ—Å–ª—è –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è –±–∞–∑–æ–≤–∏—Ö
 * @param {number} difficulty - –†—ñ–≤–µ–Ω—å —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ (1-10)
 * @returns {Object} - –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π —Ä—ñ–≤–µ–Ω—å
 */
export function generateRandomLevel(difficulty = 1) {
  const size = 8;
  const config = GAME_CONFIG.levelGenerator;
  
  // –ú–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ
  const diffScale = Math.min(difficulty / 10, 1);
  
  // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –º–æ–Ω—Å—Ç—Ä–∞
  const monsterHealth = Math.floor(
    config.minMonsterHealth + 
    (config.maxMonsterHealth - config.minMonsterHealth) * diffScale
  );
  const monsterDamage = Math.floor(
    config.minMonsterDamage + 
    (config.maxMonsterDamage - config.minMonsterDamage) * diffScale
  );

  // –í–∏–ø–∞–¥–∫–æ–≤—ñ –ø–æ–∑–∏—Ü—ñ—ó
  const heroPos = [Math.floor(Math.random() * size), Math.floor(Math.random() * size)];
  let monsterPos;
  do {
    monsterPos = [Math.floor(Math.random() * size), Math.floor(Math.random() * size)];
  } while (heroPos[0] === monsterPos[0] && heroPos[1] === monsterPos[1]);

  // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø–µ—Ä–µ—à–∫–æ–¥
  const obstacles = [];
  for (let r = 0; r < size; r++) {
    for (let c = 0; c < size; c++) {
      if ((r === heroPos[0] && c === heroPos[1]) || 
          (r === monsterPos[0] && c === monsterPos[1])) continue;
      
      if (Math.random() < config.obstaclesProbability * diffScale) {
        obstacles.push([r, c]);
      }
    }
  }

  // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
  const weapons = [];
  const armor = [];
  const potions = [];
  const itemCount = Math.floor(1 + difficulty / 2);

  for (let i = 0; i < itemCount; i++) {
    let pos;
    do {
      pos = [Math.floor(Math.random() * size), Math.floor(Math.random() * size)];
    } while (
      (pos[0] === heroPos[0] && pos[1] === heroPos[1]) ||
      (pos[0] === monsterPos[0] && pos[1] === monsterPos[1]) ||
      obstacles.some(o => o[0] === pos[0] && o[1] === pos[1])
    );

    const rand = Math.random();
    if (rand < 0.4) weapons.push(pos);
    else if (rand < 0.7) armor.push(pos);
    else potions.push(pos);
  }

  // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ par (—Ü—ñ–ª—å–æ–≤–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –±–ª–æ–∫—ñ–≤)
  const estimatedMoves = Math.abs(heroPos[0] - monsterPos[0]) + Math.abs(heroPos[1] - monsterPos[1]);
  const parGold = Math.ceil(estimatedMoves * 0.8);
  const parSilver = Math.ceil(estimatedMoves * 1.2);

  const monsterNames = ['–Ü—Å—Ç–æ—Ç–∞', '–î–µ–º–æ–Ω', '–ü—Ä–∏–≤–∏–¥', '–í–æ–≤–∫', '–ó–º—ñ–π', '–í—ñ–¥—å–º–∞'];
  const monsterIcons = ['üëæ', 'üëπ', 'üëª', 'üê∫', 'üêâ', 'üßô'];
  const randomIndex = Math.floor(Math.random() * monsterNames.length);

  return {
    size,
    hero: heroPos,
    monster: monsterPos,
    items: { weapons, armor, potions },
    monsterStats: {
      health: monsterHealth,
      damage: monsterDamage,
      name: monsterNames[randomIndex],
      icon: monsterIcons[randomIndex]
    },
    obstacles,
    desc: `–ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π —Ä—ñ–≤–µ–Ω—å —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ ${difficulty}. –ó–¥–æ–ª–∞–π ${monsterNames[randomIndex]}!`,
    par: { gold: parGold, silver: parSilver },
    isGenerated: true, // –ú–∞—Ä–∫–µ—Ä –¥–ª—è –≤—ñ–¥—Å–ª—ñ–¥–∫–æ–≤—É–≤–∞–Ω–Ω—è –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏—Ö —Ä—ñ–≤–Ω—ñ–≤
    difficulty
  };
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä—ñ–≤–Ω—è –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º
 * –Ø–∫—â–æ —ñ–Ω–¥–µ–∫—Å –≤–∏—Ö–æ–¥–∏—Ç—å –∑–∞ –º–µ–∂—ñ –±–∞–∑–æ–≤–∏—Ö —Ä—ñ–≤–Ω—ñ–≤, –≥–µ–Ω–µ—Ä—É—î—Ç—å—Å—è –Ω–æ–≤–∏–π
 * @param {number} index - –Ü–Ω–¥–µ–∫—Å —Ä—ñ–≤–Ω—è
 * @returns {Object} - –û–±'—î–∫—Ç —Ä—ñ–≤–Ω—è
 */
export function getLevel(index) {
  if (index < levels.length) {
    return levels[index];
  } else {
    // –ì–µ–Ω–µ—Ä—É—î–º–æ –Ω–æ–≤–∏–π —Ä—ñ–≤–µ–Ω—å –∑ –Ω–∞—Ä–æ—Å—Ç–∞—é—á–æ—é —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—é
    const difficulty = index - levels.length + 1;
    return generateRandomLevel(difficulty);
  }
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–∞–≥–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –±–∞–∑–æ–≤–∏—Ö —Ä—ñ–≤–Ω—ñ–≤
 * @returns {number} - –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—ñ–≤–Ω—ñ–≤
 */
export function getBaseLevelCount() {
  return levels.length;
}
