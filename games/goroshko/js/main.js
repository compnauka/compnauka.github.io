/**
 * –¢–æ—á–∫–∞ –≤—Ö–æ–¥—É –≤ –¥–æ–¥–∞—Ç–æ–∫
 * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –≥—Ä—É, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é —Ç–∞ –≤—Å—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
 */

import { Game } from './game.js';
import { soundEngine } from './sound.js';
import { authManager } from './auth.js';

const scheduleIdleTask = (typeof window !== 'undefined' && typeof window.requestIdleCallback === 'function')
  ? (cb) => window.requestIdleCallback(cb)
  : (cb) => setTimeout(cb, 1200);

/**
 * –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
 */
async function init() {
  // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
  authManager.init();

  // –ó–±—ñ—Ä –≤—Å—ñ—Ö DOM-–µ–ª–µ–º–µ–Ω—Ç—ñ–≤
  const elements = {
    // –°—ñ—Ç–∫–∞
    grid: document.getElementById('grid'),

    // –ö–æ–º–∞–Ω–¥–∏
    commandList: document.getElementById('commandList'),
    commandPalette: document.getElementById('commandPalette'),
    btnRun: document.getElementById('btnRun'),
    btnClear: document.getElementById('btnClear'),

    // –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ä—ñ–≤–µ–Ω—å
    levelNum: document.getElementById('levelNum'),
    levelDesc: document.getElementById('levelDesc'),
    damage: document.getElementById('damage'),
    armor: document.getElementById('armor'),
    health: document.getElementById('health'),
    parGold: document.getElementById('parGold'),

    // –ë—ñ–π
    battleScene: document.getElementById('battleScene'),
    battleLog: document.getElementById('battleLog'),
    heroHealthBar: document.getElementById('heroHealthBar'),
    monsterHealthBar: document.getElementById('monsterHealthBar'),
    heroHealthText: document.getElementById('heroHealthText'),
    monsterHealthText: document.getElementById('monsterHealthText'),
    monsterIcon: document.getElementById('monsterIcon'),
    monsterName: document.getElementById('monsterName'),

    // UI
    message: document.getElementById('message'),
    tutorialModal: document.getElementById('tutorialModal'),
    tutorialBackdrop: document.getElementById('tutorialModalBackdrop'),
    tutorialCloseBtn: document.getElementById('tutorialCloseBtn'),
    victoryModal: document.getElementById('victoryModal'),
    victoryBackdrop: document.getElementById('victoryModalBackdrop'),
    victoryBlockCount: document.getElementById('victoryBlockCount'),
    victoryMedal: document.getElementById('victoryMedal'),
    victoryNextBtn: document.getElementById('victoryNextBtn'),

    // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    soundToggle: document.getElementById('soundToggle'),
    soundIcon: document.getElementById('soundIcon'),
    fullscreenToggle: document.getElementById('fullscreenToggle'),
    fullscreenIcon: document.getElementById('fullscreenIcon'),

    // –ü—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–Ω–æ–≤—ñ –µ–ª–µ–º–µ–Ω—Ç–∏)
    userProfile: document.getElementById('userProfile'),
    userAvatar: document.getElementById('userAvatar'),
    userName: document.getElementById('userName'),
    loginBtn: document.getElementById('loginBtn'),
    logoutBtn: document.getElementById('logoutBtn')
  };

  // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–∫–∑–µ–º–ø–ª—è—Ä—É –≥—Ä–∏
  const game = new Game();
  let initError = null;

  try {
    await game.init(elements); // –ó–º—ñ–Ω–µ–Ω–æ: –¥–æ–¥–∞–Ω–æ await –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—ó —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
  } catch (error) {
    initError = error;
    console.error('–ù–µ –≤–¥–∞–ª–æ—Å—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –≥—Ä—É:', error);
  } finally {
    hideGlobalLoader();
    scheduleWarmupTasks();
  }

  // –û–±—Ä–æ–±–∫–∞ –∑–º—ñ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
  authManager.onAuthChange((user) => {
    updateUserUI(user, elements);
  });

  // –†–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∑–≤—É–∫—É –ø—Ä–∏ –ø–µ—Ä—à—ñ–π –≤–∑–∞—î–º–æ–¥—ñ—ó
  soundEngine.unlock();

  // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –ø—Ä–æ—Ñ—ñ–ª—é
  if (elements.loginBtn) {
    elements.loginBtn.addEventListener('click', () => {
      window.location.href = 'auth.html';
    });
  }

  if (elements.logoutBtn) {
    elements.logoutBtn.addEventListener('click', async () => {
      const result = await authManager.logout();
      if (result.success) {
        window.location.reload();
      }
    });
  }

  // –ì–ª–æ–±–∞–ª—å–Ω–∏–π –¥–æ—Å—Ç—É–ø –¥–ª—è –≤—ñ–¥–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è
  if (typeof window !== 'undefined') {
    window.game = game;
    window.auth = authManager;
    console.log('üéÆ –ì—Ä–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞! –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π window.game –¥–ª—è –≤—ñ–¥–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è.');
  }

  if (initError) {
    displayBootstrapError();
  }
}

/**
 * –û–Ω–æ–≤–ª–µ–Ω–Ω—è UI –ø—Ä–æ—Ñ—ñ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * @param {Object} user - Firebase User –∞–±–æ null
 * @param {Object} elements - DOM –µ–ª–µ–º–µ–Ω—Ç–∏
 */
function updateUserUI(user, elements) {
  if (!elements.userProfile) return;

  // –°–ø–æ—á–∞—Ç–∫—É –≤–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –≥–æ—Å—Ç—è, —è–∫—â–æ –≤–æ–Ω–æ —î
  const existingGuestMsg = document.getElementById('guestMessage');
  if (existingGuestMsg) {
    existingGuestMsg.remove();
  }

  if (user) {
    // –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π
    if (elements.userAvatar) {
      elements.userAvatar.textContent = user.isAnonymous ? 'üë§' : 'üë®‚Äçüíª';
    }
    
    if (elements.userName) {
      elements.userName.textContent = authManager.getUserDisplayName();
    }

    if (elements.loginBtn) {
      elements.loginBtn.classList.add('hidden');
    }

    if (elements.logoutBtn && !user.isAnonymous) {
      elements.logoutBtn.classList.remove('hidden');
    } else if (elements.logoutBtn) {
      elements.logoutBtn.classList.add('hidden');
    }

    elements.userProfile.classList.remove('hidden');
    
    // –ó–º—ñ–Ω–µ–Ω–æ: –î–æ–¥–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á - –≥—ñ—Å—Ç—å
    if (user.isAnonymous) {
      const guestMsg = document.createElement('p');
      guestMsg.id = 'guestMessage';
      guestMsg.className = 'text-xs text-center text-orange-600 font-bold mt-2';
      guestMsg.textContent = '–ü—Ä–æ–≥—Ä–µ—Å –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –ª–∏—à–µ –Ω–∞ —Ü—å–æ–º—É –ø—Ä–∏—Å—Ç—Ä–æ—ó.';
      // –î–æ–¥–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—ñ—Å–ª—è –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ø—Ä–æ—Ñ—ñ–ª—é, —â–æ–± –Ω–µ –ø–æ—Ä—É—à—É–≤–∞—Ç–∏ flex-–≤–µ—Ä—Å—Ç–∫—É
      elements.userProfile.parentElement.appendChild(guestMsg);
    }

  } else {
    // –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π
    if (elements.loginBtn) {
      elements.loginBtn.classList.remove('hidden');
    }

    if (elements.logoutBtn) {
      elements.logoutBtn.classList.add('hidden');
    }

    if (elements.userProfile) {
      elements.userProfile.classList.add('hidden');
    }
  }
}

function hideGlobalLoader() {
  const loader = document.getElementById('globalLoader');
  if (!loader) return;

  const hide = () => {
    loader.classList.add('loading-screen--hidden');
    const remove = () => loader.remove();
    loader.addEventListener('transitionend', remove, { once: true });
    setTimeout(remove, 600);
  };

  if (typeof requestAnimationFrame === 'function') {
    requestAnimationFrame(hide);
  } else {
    hide();
  }
}

function displayBootstrapError() {
  const message = document.getElementById('message');
  if (!message) return;

  message.textContent = '–ù–∞ –∂–∞–ª—å, –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –≥—Ä—É. –û–Ω–æ–≤—ñ—Ç—å —Å—Ç–æ—Ä—ñ–Ω–∫—É —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.';
  message.classList.remove('hidden');
  message.classList.add('bg-red-100', 'text-red-700', 'border', 'border-red-300');
}

function scheduleWarmupTasks() {
  if (typeof window === 'undefined') return;

  const connection = (typeof navigator !== 'undefined' && navigator.connection) || null;

  scheduleIdleTask(async () => {
    const tasks = [];

    if (!connection || !connection.saveData) {
      if (soundEngine && typeof soundEngine.prime === 'function') {
        tasks.push(soundEngine.prime());
      }

      const documentsToPrefetch = ['leaderboard.html', 'story.html', 'algorithms.html'];
      documentsToPrefetch.forEach((path) => {
        tasks.push(
          fetch(path, { cache: 'force-cache' }).catch(() => {})
        );
      });
    }

    try {
      await Promise.allSettled(tasks);
    } catch (error) {
      console.debug('Warmup tasks failed:', error);
    }
  });
}

// –ó–∞–ø—É—Å–∫ –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', init);
} else {
  init();
}
